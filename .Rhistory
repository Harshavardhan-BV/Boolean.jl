mc <- 50; #initial mRNA number in cytoplasm
k <- 10; #mRNA production rate
th <- 1/200; #transport rate from nucleus to cytoplasm
d <- 1/30; #degradation rate in cytoplasm
matrix=list();
matrix[[1]] <- t1;
matrix[[2]] <- mn;
t1 <- 0;
matrix=list();
matrix[[1]] <- t1;
matrix[[2]] <- mn;
matrix[[3]] <- mc;
f <- 2
a1 <- k;
a2 <- th*mn;
a3 <- d*mc;
ao <- a1+a2+a3;
t <- seq(0,10,0.01);
p <- ao*exp(-ao*t);
#choose a reaction
B <- runif(1);
vec=c(0,a1/ao,((a1+a2)/ao),(a1+a2+a3/ao));
for (sz in 1:(length(vec)-1))
{
if (B>vec[sz] && B<vec[sz+1])
w <- sz
}
#random draw T from the distribution
b <- runif(1)*ao;
x <- length(p);
for (q in 1:(x-1))
{
if (b>=p[q] && b<=p[q+1])
{
z <- q+1
t <- t+t[z]
}
}
if (w==1)
mn=mn+1
if (w==2)
{
mn=mn-1
mc=mc+1
}
if (w==3)
mc=mc-1
matrix[[1]][f] <- t
View(matrix)
mn <-  100; #initial mRNA number in nucleus
mc <- 50; #initial mRNA number in cytoplasm
k <- 10; #mRNA production rate
th <- 1/200; #transport rate from nucleus to cytoplasm
d <- 1/30; #degradation rate in cytoplasm
t1 <- 0;
matrix=list();
matrix[[1]] <- c(t1,rep(0, 99999))
matrix[[2]] <- c(mn, rep(0, 99999))
matrix[[3]] <- c(mc,rep(0, 99999))
a1 <- k;
a2 <- th*mn;
a3 <- d*mc;
ao <- a1+a2+a3;
p <- ao*exp(-ao*t);
#choose a reaction
B <- runif(1);
vec=c(0,a1/ao,((a1+a2)/ao),(a1+a2+a3/ao));
for (sz in 1:(length(vec)-1))
{
if (B>vec[sz] && B<vec[sz+1])
w <- sz
}
#random draw T from the distribution
b <- runif(1)*ao;
x <- length(p);
{
if (b>=p[q] && b<=p[q+1])
{
z <- q+1
t <- t+t[z]
}
}
if (w==1)
mn=mn+1
if (w==2)
{
mn=mn-1
mc=mc+1
}
if (w==3)
mc=mc-1
matrix[[1]][f] <- t
mn <-  100; #initial mRNA number in nucleus
k <- 10; #mRNA production rate
th <- 1/200; #transport rate from nucleus to cytoplasm
d <- 1/30; #degradation rate in cytoplasm
matrix=list();
matrix[[1]] <- c(t1,rep(0, 99999))
matrix[[2]] <- c(mn, rep(0, 99999))
matrix[[3]] <- c(mc,rep(0, 99999))
for (f in 2:100000)
f <- 2
a1 <- k;
a2 <- th*mn;
ao <- a1+a2+a3;
t <- seq(0,10,0.01);
p <- ao*exp(-ao*t);
#choose a reaction
B <- runif(1);
vec=c(0,a1/ao,((a1+a2)/ao),(a1+a2+a3/ao));
for (sz in 1:(length(vec)-1))
{
if (B>vec[sz] && B<vec[sz+1])
w <- sz
}
#random draw T from the distribution
b <- runif(1)*ao;
x <- length(p);
for (q in 1:(x-1))
{
if (b>=p[q] && b<=p[q+1])
{
z <- q+1
t1 <- t1+t[z]
}
}
if (w==1)
mn=mn+1
if (w==2)
{
mn=mn-1
mc=mc+1
}
if (w==3)
mc=mc-1
matrix[[1]][f] <- t1
matrix[[2]][f] <- mn
matrix[[3]][f] <- mc
mn <-  100; #initial mRNA number in nucleus
mc <- 50; #initial mRNA number in cytoplasm
k <- 10; #mRNA production rate
th <- 1/200; #transport rate from nucleus to cytoplasm
d <- 1/30; #degradation rate in cytoplasm
t1 <- 0;
matrix=list();
matrix[[1]] <- c(t1,rep(0, 99999))
matrix[[2]] <- c(mn, rep(0, 99999))
matrix[[3]] <- c(mc,rep(0, 99999))
for (f in 2:100000)
{
a1 <- k;
a2 <- th*mn;
a3 <- d*mc;
ao <- a1+a2+a3;
t <- seq(0,10,0.01);
p <- ao*exp(-ao*t);
#choose a reaction
B <- runif(1);
vec=c(0,a1/ao,((a1+a2)/ao),(a1+a2+a3/ao));
for (sz in 1:(length(vec)-1))
{
if (B>vec[sz] && B<vec[sz+1])
w <- sz
}
#random draw T from the distribution
b <- runif(1)*ao;
x <- length(p);
for (q in 1:(x-1))
{
if (b>=p[q] && b<=p[q+1])
{
z <- q+1
t1 <- t1+t[z]
}
}
#update number of molecules of each species
if (w==1)
mn=mn+1
if (w==2)
{
mn=mn-1
mc=mc+1
}
if (w==3)
mc=mc-1
matrix[[1]][f] <- t1
matrix[[2]][f] <- mn
matrix[[3]][f] <- mc
}
hist(matrix[[2]])
hist(matrix[[3]])
library(ggplot2)
mat <- data.frame(matrix)
colnames(mat) <- c("t", "M_N", "M_C")
ggplot(mat, aes(x = M_N)) + geom_histogram()
ggplot(mat, aes(x = M_N)) + geom_histogram() + ylim(5000, 40000)
ggplot(mat, aes(x = M_N)) + geom_histogram()
ggplot(mat, aes(x = M_N)) + geom_histogram() + xlim(1700, 2100)
ggplot(mat, aes(x = M_C)) + geom_histogram() + xlim(1700, 2100)
ggplot(mat, aes(x = M_C)) + geom_histogram()
y = 0:20
b = 1 - (y^5.5/((17*(14^5.5)/3) + y^5.5))
plot(y,b)
b = (y^5.5/((17*(14^5.5)/3) + y^5.5))
plot(y,b)
y = 0:30
b = y^5.5/((17*(14^5.5)/3) + y^5.5)
plot(y,b)
b = y^5.5/((14^5.5)*17/3 + y^5.5)
plot(y,b)
y = 0:30
b = y^5.5/((14^5.5)*17/3 + y^5.5)
plot(y,b)
y = 0:30
b = 1- y^5.5/((14^5.5)*17/3 + y^5.5)
plot(y,b)
y = 0:30
b = 1- y^5.5/((7.5^5.5)*17/3 + y^5.5)
plot(y,b)
y = 0:20
b = y^5.5/((7.5^5.5)*17/3 + y^5.5)
plot(y,b)
y = 0:20
b = 1 - y^5.5/((7.5^5.5)*17/3 + y^5.5)
plot(y,b)
df <- data.frame(y,b)
View(df)
sd(c(176,180,194)
)
sd(c(176,180,194))/2000
library(deSolve)
library(rootSolve)
runsteady()
library(ggthemes)
library(ggplot2)
keqa = 10000
keqe = 10000
gt = 800
kt = 0.052
lamdaae = 0.5
lamdaet = 2.5
lamdata = 2.5
nae = 6
net = 6
nta = 6
Et = 470000
At = 50000
t0a = 8000
a0e = 25000
e0t = 10000
T_max = 16000
A = 0:10:At
E = 0:10:Et
Tf = 0:10:T_max
Anull = data.frame(Tf = Tf)
Hillsta=(1+lamdata*(Tf/t0a)^nta)/(1+(Tf/t0a)^nta)
Anull$A = keqa*Hillsta/(1+keqa)
Tnull = data.frame(A = A)
Hillsae=(1+lamdaae*(A/a0e)^nae)/(1+(A/a0e)^nae)
Tnull$E = keqe*Hillsae/(1+keqe)
Hillset=(1+lamdaet*(Tnull$E/e0t)^net)/(1+(Tnull$E/e0t)^net)
Tnull$Tf = gt/(kt*Hillset)
ggplot() + geom_line(data = Tnull, aes(x = A, y = Tf), color = "red") +
geom_line(data = Anull, aes(x = A, y = Tf), color = "blue") +
theme_stata()
keqa = 10000
keqe = 10000
gt = 800
kt = 0.052
lamdaae = 0.5
lamdaet = 2.5
lamdata = 2.5
nae = 6
net = 6
nta = 6
Et = 470000
At = 50000
t0a = 8000
a0e = 25000
e0t = 10000
T_max = 16000
A = seq(0,At,10)
E = seq(0,Et,10)
Tf = seq(0,T_max,10)
Anull = data.frame(Tf = Tf)
Hillsta=(1+lamdata*(Tf/t0a)^nta)/(1+(Tf/t0a)^nta)
Anull$A = keqa*Hillsta/(1+keqa)
Tnull = data.frame(A = A)
Hillsae=(1+lamdaae*(A/a0e)^nae)/(1+(A/a0e)^nae)
Tnull$E = keqe*Hillsae/(1+keqe)
Hillset=(1+lamdaet*(Tnull$E/e0t)^net)/(1+(Tnull$E/e0t)^net)
Tnull$Tf = gt/(kt*Hillset)
ggplot() + geom_line(data = Tnull, aes(x = A, y = Tf), color = "red") +
geom_line(data = Anull, aes(x = A, y = Tf), color = "blue") +
theme_stata()
keqa = 10000
keqe = 10000
gt = 800
kt = 0.052
lamdaae = 0.5
lamdaet = 2.5
lamdata = 2.5
nae = 6
net = 6
nta = 6
Et = 470000
At = 50000
t0a = 8000
a0e = 25000
e0t = 10
T_max = 16000
A = seq(0,At,10)
E = seq(0,Et,10)
Tf = seq(0,T_max,10)
Anull = data.frame(Tf = Tf)
Hillsta=(1+lamdata*(Tf/t0a)^nta)/(1+(Tf/t0a)^nta)
Anull$A = keqa*Hillsta/(1+keqa)
Tnull = data.frame(A = A)
Hillsae=(1+lamdaae*(A/a0e)^nae)/(1+(A/a0e)^nae)
Tnull$E = keqe*Hillsae/(1+keqe)
Hillset=(1+lamdaet*(Tnull$E/e0t)^net)/(1+(Tnull$E/e0t)^net)
Tnull$Tf = gt/(kt*Hillset)
ggplot() + geom_line(data = Tnull, aes(x = A, y = Tf), color = "red") +
geom_line(data = Anull, aes(x = A, y = Tf), color = "blue") +
theme_stata()
keqa = 10000
keqe = 10000
gt = 800
kt = 0.052
lamdaae = 0.5
lamdaet = 2.5
lamdata = 2.5
nae = 6
net = 6
nta = 6
Et = 470000
At = 50000
t0a = 8000
a0e = 5000
e0t = 10
T_max = 16000
A = seq(0,At,10)
E = seq(0,Et,10)
Tf = seq(0,T_max,10)
Anull = data.frame(Tf = Tf)
Hillsta=(1+lamdata*(Tf/t0a)^nta)/(1+(Tf/t0a)^nta)
Anull$A = keqa*Hillsta/(1+keqa)
Tnull = data.frame(A = A)
Hillsae=(1+lamdaae*(A/a0e)^nae)/(1+(A/a0e)^nae)
Tnull$E = keqe*Hillsae/(1+keqe)
Hillset=(1+lamdaet*(Tnull$E/e0t)^net)/(1+(Tnull$E/e0t)^net)
Tnull$Tf = gt/(kt*Hillset)
ggplot() + geom_line(data = Tnull, aes(x = A, y = Tf), color = "red") +
geom_line(data = Anull, aes(x = A, y = Tf), color = "blue") +
theme_stata()
keqa = 10000
keqe = 10000
gt = 800
kt = 0.052
lamdaae = 0.5
lamdaet = 2.5
lamdata = 2.5
nae = 6
net = 6
nta = 6
Et = 470000
At = 50000
t0a = 8000
a0e = 50000
e0t = 10
T_max = 16000
A = seq(0,At,10)
E = seq(0,Et,10)
Tf = seq(0,T_max,10)
Anull = data.frame(Tf = Tf)
Hillsta=(1+lamdata*(Tf/t0a)^nta)/(1+(Tf/t0a)^nta)
Anull$A = keqa*Hillsta/(1+keqa)
Tnull = data.frame(A = A)
Hillsae=(1+lamdaae*(A/a0e)^nae)/(1+(A/a0e)^nae)
Tnull$E = keqe*Hillsae/(1+keqe)
Hillset=(1+lamdaet*(Tnull$E/e0t)^net)/(1+(Tnull$E/e0t)^net)
Tnull$Tf = gt/(kt*Hillset)
ggplot() + geom_line(data = Tnull, aes(x = A, y = Tf), color = "red") +
geom_line(data = Anull, aes(x = A, y = Tf), color = "blue") +
theme_stata()
keqa = 10000
keqe = 10000
gt = 800
kt = 0.052
lamdaae = 0.5
lamdaet = 2.5
lamdata = 2.5
nae = 6
net = 6
nta = 6
Et = 470000
At = 50000
t0a = 8000
a0e = 50000
e0t = 10
T_max = 16000
A = seq(0,At,10)
E = seq(0,Et,10)
Tf = seq(0,T_max,10)
Anull = data.frame(Tf = Tf)
Hillsta=(1+lamdata*(Tf/t0a)^nta)/(1+(Tf/t0a)^nta)
Anull$A = keqa*Hillsta*At/(1+keqa)
Tnull = data.frame(A = A)
Hillsae=(1+lamdaae*(A/a0e)^nae)/(1+(A/a0e)^nae)
Tnull$E = keqe*Hillsae*Et/(1+keqe)
Hillset=(1+lamdaet*(Tnull$E/e0t)^net)/(1+(Tnull$E/e0t)^net)
Tnull$Tf = gt/(kt*Hillset)
ggplot() + geom_line(data = Tnull, aes(x = A, y = Tf), color = "red") +
geom_line(data = Anull, aes(x = A, y = Tf), color = "blue") +
theme_stata()
keqa = 10000
keqe = 10000
gt = 800
kt = 0.052
lamdaae = 0.5
lamdaet = 2.5
lamdata = 2.5
nae = 6
net = 6
nta = 6
Et = 470000
At = 50000
t0a = 8000
a0e = 20000
e0t = 10
T_max = 16000
A = seq(0,At,10)
E = seq(0,Et,10)
Tf = seq(0,T_max,10)
Anull = data.frame(Tf = Tf)
Hillsta=(1+lamdata*(Tf/t0a)^nta)/(1+(Tf/t0a)^nta)
Anull$A = keqa*Hillsta*At/(1+keqa)
Tnull = data.frame(A = A)
Hillsae=(1+lamdaae*(A/a0e)^nae)/(1+(A/a0e)^nae)
Tnull$E = keqe*Hillsae*Et/(1+keqe)
Hillset=(1+lamdaet*(Tnull$E/e0t)^net)/(1+(Tnull$E/e0t)^net)
Tnull$Tf = gt/(kt*Hillset)
ggplot() + geom_line(data = Tnull, aes(x = A, y = Tf), color = "red") +
geom_line(data = Anull, aes(x = A, y = Tf), color = "blue") +
theme_stata()
keqa = 10000
keqe = 10000
gt = 800
kt = 0.052
lamdaae = 0.5
lamdaet = 2.5
lamdata = 2.5
nae = 6
net = 6
nta = 6
Et = 470000
At = 130000
t0a = 8000
a0e = 20000
e0t = 10
T_max = 16000
A = seq(0,At,10)
E = seq(0,Et,10)
Tf = seq(0,T_max,10)
Anull = data.frame(Tf = Tf)
Hillsta=(1+lamdata*(Tf/t0a)^nta)/(1+(Tf/t0a)^nta)
Anull$A = keqa*Hillsta*At/(1+keqa)
Tnull = data.frame(A = A)
Hillsae=(1+lamdaae*(A/a0e)^nae)/(1+(A/a0e)^nae)
Tnull$E = keqe*Hillsae*Et/(1+keqe)
Hillset=(1+lamdaet*(Tnull$E/e0t)^net)/(1+(Tnull$E/e0t)^net)
Tnull$Tf = gt/(kt*Hillset)
ggplot() + geom_line(data = Tnull, aes(x = A, y = Tf), color = "red") +
geom_line(data = Anull, aes(x = A, y = Tf), color = "blue") +
theme_stata()
?corr
?cor
setwd("D:/Github/Boolean.jl")
library(funcsKishore)
df1 <- read_csv("GRHL2_finFlagFreq.csv")
df2 <- read_csv("GRHL2_shubham_1_finFlagFreq.csv.csv")
df2 <- read_csv("GRHL2_shubham_1_finFlagFreq.csv")
df3 <- read_csv("GRHL2_nonMatrix_finFlagFreq.csv")
df <- merge(df1, df2, by = "states", all = T) %>% merge(df3, by = "states", all = T)
View(df)
df <- df %>% select(contains("Avg"), contains("flag"))
View(df)
df <- merge(df1, df2, by = "states", all = T) %>% merge(df3, by = "states", all = T)
df <- df %>% select(contains("Avg"), contains("flag"), states)
df4 <- read_csv("GRHL2_nIsing_finFlagFreq.csv")
df5 <- merge(df4, read_csv("GRHL2_nIsing_nonMatrix_finFlagFreq.csv"), by = "states", all = T)
View(df5)
View(df4)
df3 <- read_csv("GRHL2_nonMatrix_finFlagFreq.csv")
df <- merge(df1, df2, by = "states", all = T) %>% merge(df3, by = "states", all = T)
df <- df %>% select(contains("Avg"), contains("flag"), states)
View(df)
df4 <- read_csv("GRHL2_nIsing_finFlagFreq.csv")
df5 <- merge(df4, read_csv("GRHL2_nIsing_nonMatrix_finFlagFreq.csv"), by = "states", all = T)
View(df5)
df4 <- read_csv("EMT_RACIPE_nIsing_finFlagFreq.csv")
df5 <- merge(df4, read_csv("EMT_RACIPE_nIsing_nonMatrix_finFlagFreq.csv"), by = "states", all = T)
library(philentropy)
install.packages("philentropy")
library(philentropy)
df6 <- df5 %>% select(contains("Avg")) %>% mutate(across(everything(), .fns = function(x){ifelse(is.na(x), 0, x)}))
View(df6)
df6 %>% t %>% JSD
hist(df6$Avg0.x - df6$Avg0.y)
View(df5)
df6 %>% arrage(desc(Avg0.x)) %>% slice(1:20)%>% t %>% JSD
df6 %>% arrange(desc(Avg0.x)) %>% slice(1:20)%>% t %>% JSD
